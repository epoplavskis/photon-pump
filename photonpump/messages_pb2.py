# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: messages.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0emessages.proto\x12\x1a\x45ventStore.Client.Messages\"\x8a\x01\n\x08NewEvent\x12\x10\n\x08\x65vent_id\x18\x01 \x02(\x0c\x12\x12\n\nevent_type\x18\x02 \x02(\t\x12\x19\n\x11\x64\x61ta_content_type\x18\x03 \x02(\x05\x12\x1d\n\x15metadata_content_type\x18\x04 \x02(\x05\x12\x0c\n\x04\x64\x61ta\x18\x05 \x02(\x0c\x12\x10\n\x08metadata\x18\x06 \x01(\x0c\"\xe4\x01\n\x0b\x45ventRecord\x12\x17\n\x0f\x65vent_stream_id\x18\x01 \x02(\t\x12\x14\n\x0c\x65vent_number\x18\x02 \x02(\x03\x12\x10\n\x08\x65vent_id\x18\x03 \x02(\x0c\x12\x12\n\nevent_type\x18\x04 \x02(\t\x12\x19\n\x11\x64\x61ta_content_type\x18\x05 \x02(\x05\x12\x1d\n\x15metadata_content_type\x18\x06 \x02(\x05\x12\x0c\n\x04\x64\x61ta\x18\x07 \x02(\x0c\x12\x10\n\x08metadata\x18\x08 \x01(\x0c\x12\x0f\n\x07\x63reated\x18\t \x01(\x03\x12\x15\n\rcreated_epoch\x18\n \x01(\x03\"\x85\x01\n\x14ResolvedIndexedEvent\x12\x36\n\x05\x65vent\x18\x01 \x02(\x0b\x32\'.EventStore.Client.Messages.EventRecord\x12\x35\n\x04link\x18\x02 \x01(\x0b\x32\'.EventStore.Client.Messages.EventRecord\"\xb1\x01\n\rResolvedEvent\x12\x36\n\x05\x65vent\x18\x01 \x02(\x0b\x32\'.EventStore.Client.Messages.EventRecord\x12\x35\n\x04link\x18\x02 \x01(\x0b\x32\'.EventStore.Client.Messages.EventRecord\x12\x17\n\x0f\x63ommit_position\x18\x03 \x02(\x03\x12\x18\n\x10prepare_position\x18\x04 \x02(\x03\"\x8e\x01\n\x0bWriteEvents\x12\x17\n\x0f\x65vent_stream_id\x18\x01 \x02(\t\x12\x18\n\x10\x65xpected_version\x18\x02 \x02(\x03\x12\x34\n\x06\x65vents\x18\x03 \x03(\x0b\x32$.EventStore.Client.Messages.NewEvent\x12\x16\n\x0erequire_leader\x18\x04 \x02(\x08\"\xe7\x01\n\x14WriteEventsCompleted\x12;\n\x06result\x18\x01 \x02(\x0e\x32+.EventStore.Client.Messages.OperationResult\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x1a\n\x12\x66irst_event_number\x18\x03 \x02(\x03\x12\x19\n\x11last_event_number\x18\x04 \x02(\x03\x12\x18\n\x10prepare_position\x18\x05 \x01(\x03\x12\x17\n\x0f\x63ommit_position\x18\x06 \x01(\x03\x12\x17\n\x0f\x63urrent_version\x18\x07 \x01(\x03\"n\n\x0c\x44\x65leteStream\x12\x17\n\x0f\x65vent_stream_id\x18\x01 \x02(\t\x12\x18\n\x10\x65xpected_version\x18\x02 \x02(\x03\x12\x16\n\x0erequire_leader\x18\x03 \x02(\x08\x12\x13\n\x0bhard_delete\x18\x04 \x01(\x08\"\x98\x01\n\x15\x44\x65leteStreamCompleted\x12;\n\x06result\x18\x01 \x02(\x0e\x32+.EventStore.Client.Messages.OperationResult\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x18\n\x10prepare_position\x18\x03 \x01(\x03\x12\x17\n\x0f\x63ommit_position\x18\x04 \x01(\x03\"]\n\x10TransactionStart\x12\x17\n\x0f\x65vent_stream_id\x18\x01 \x02(\t\x12\x18\n\x10\x65xpected_version\x18\x02 \x02(\x03\x12\x16\n\x0erequire_leader\x18\x03 \x02(\x08\"\x81\x01\n\x19TransactionStartCompleted\x12\x16\n\x0etransaction_id\x18\x01 \x02(\x03\x12;\n\x06result\x18\x02 \x02(\x0e\x32+.EventStore.Client.Messages.OperationResult\x12\x0f\n\x07message\x18\x03 \x01(\t\"x\n\x10TransactionWrite\x12\x16\n\x0etransaction_id\x18\x01 \x02(\x03\x12\x34\n\x06\x65vents\x18\x02 \x03(\x0b\x32$.EventStore.Client.Messages.NewEvent\x12\x16\n\x0erequire_leader\x18\x03 \x02(\x08\"\x81\x01\n\x19TransactionWriteCompleted\x12\x16\n\x0etransaction_id\x18\x01 \x02(\x03\x12;\n\x06result\x18\x02 \x02(\x0e\x32+.EventStore.Client.Messages.OperationResult\x12\x0f\n\x07message\x18\x03 \x01(\t\"C\n\x11TransactionCommit\x12\x16\n\x0etransaction_id\x18\x01 \x02(\x03\x12\x16\n\x0erequire_leader\x18\x02 \x02(\x08\"\xec\x01\n\x1aTransactionCommitCompleted\x12\x16\n\x0etransaction_id\x18\x01 \x02(\x03\x12;\n\x06result\x18\x02 \x02(\x0e\x32+.EventStore.Client.Messages.OperationResult\x12\x0f\n\x07message\x18\x03 \x01(\t\x12\x1a\n\x12\x66irst_event_number\x18\x04 \x02(\x03\x12\x19\n\x11last_event_number\x18\x05 \x02(\x03\x12\x18\n\x10prepare_position\x18\x06 \x01(\x03\x12\x17\n\x0f\x63ommit_position\x18\x07 \x01(\x03\"l\n\tReadEvent\x12\x17\n\x0f\x65vent_stream_id\x18\x01 \x02(\t\x12\x14\n\x0c\x65vent_number\x18\x02 \x02(\x03\x12\x18\n\x10resolve_link_tos\x18\x03 \x02(\x08\x12\x16\n\x0erequire_leader\x18\x04 \x02(\x08\"\xa0\x02\n\x12ReadEventCompleted\x12N\n\x06result\x18\x01 \x02(\x0e\x32>.EventStore.Client.Messages.ReadEventCompleted.ReadEventResult\x12?\n\x05\x65vent\x18\x02 \x02(\x0b\x32\x30.EventStore.Client.Messages.ResolvedIndexedEvent\x12\r\n\x05\x65rror\x18\x03 \x01(\t\"j\n\x0fReadEventResult\x12\x0b\n\x07Success\x10\x00\x12\x0c\n\x08NotFound\x10\x01\x12\x0c\n\x08NoStream\x10\x02\x12\x11\n\rStreamDeleted\x10\x03\x12\t\n\x05\x45rror\x10\x04\x12\x10\n\x0c\x41\x63\x63\x65ssDenied\x10\x05\"\x8b\x01\n\x10ReadStreamEvents\x12\x17\n\x0f\x65vent_stream_id\x18\x01 \x02(\t\x12\x19\n\x11\x66rom_event_number\x18\x02 \x02(\x03\x12\x11\n\tmax_count\x18\x03 \x02(\x05\x12\x18\n\x10resolve_link_tos\x18\x04 \x02(\x08\x12\x16\n\x0erequire_leader\x18\x05 \x02(\x08\"\xa2\x03\n\x19ReadStreamEventsCompleted\x12@\n\x06\x65vents\x18\x01 \x03(\x0b\x32\x30.EventStore.Client.Messages.ResolvedIndexedEvent\x12V\n\x06result\x18\x02 \x02(\x0e\x32\x46.EventStore.Client.Messages.ReadStreamEventsCompleted.ReadStreamResult\x12\x19\n\x11next_event_number\x18\x03 \x02(\x03\x12\x19\n\x11last_event_number\x18\x04 \x02(\x03\x12\x18\n\x10is_end_of_stream\x18\x05 \x02(\x08\x12\x1c\n\x14last_commit_position\x18\x06 \x02(\x03\x12\r\n\x05\x65rror\x18\x07 \x01(\t\"n\n\x10ReadStreamResult\x12\x0b\n\x07Success\x10\x00\x12\x0c\n\x08NoStream\x10\x01\x12\x11\n\rStreamDeleted\x10\x02\x12\x0f\n\x0bNotModified\x10\x03\x12\t\n\x05\x45rror\x10\x04\x12\x10\n\x0c\x41\x63\x63\x65ssDenied\x10\x05\"\x87\x01\n\rReadAllEvents\x12\x17\n\x0f\x63ommit_position\x18\x01 \x02(\x03\x12\x18\n\x10prepare_position\x18\x02 \x02(\x03\x12\x11\n\tmax_count\x18\x03 \x02(\x05\x12\x18\n\x10resolve_link_tos\x18\x04 \x02(\x08\x12\x16\n\x0erequire_leader\x18\x05 \x02(\x08\"\xf9\x02\n\x16ReadAllEventsCompleted\x12\x17\n\x0f\x63ommit_position\x18\x01 \x02(\x03\x12\x18\n\x10prepare_position\x18\x02 \x02(\x03\x12\x39\n\x06\x65vents\x18\x03 \x03(\x0b\x32).EventStore.Client.Messages.ResolvedEvent\x12\x1c\n\x14next_commit_position\x18\x04 \x02(\x03\x12\x1d\n\x15next_prepare_position\x18\x05 \x02(\x03\x12Y\n\x06result\x18\x06 \x01(\x0e\x32@.EventStore.Client.Messages.ReadAllEventsCompleted.ReadAllResult:\x07Success\x12\r\n\x05\x65rror\x18\x07 \x01(\t\"J\n\rReadAllResult\x12\x0b\n\x07Success\x10\x00\x12\x0f\n\x0bNotModified\x10\x01\x12\t\n\x05\x45rror\x10\x02\x12\x10\n\x0c\x41\x63\x63\x65ssDenied\x10\x03\"\xe9\x01\n\x06\x46ilter\x12\x41\n\x07\x63ontext\x18\x01 \x02(\x0e\x32\x30.EventStore.Client.Messages.Filter.FilterContext\x12;\n\x04type\x18\x02 \x02(\x0e\x32-.EventStore.Client.Messages.Filter.FilterType\x12\x0c\n\x04\x64\x61ta\x18\x03 \x03(\t\",\n\rFilterContext\x12\x0c\n\x08StreamId\x10\x00\x12\r\n\tEventType\x10\x01\"#\n\nFilterType\x12\t\n\x05Regex\x10\x00\x12\n\n\x06Prefix\x10\x01\"\xde\x01\n\x15\x46ilteredReadAllEvents\x12\x17\n\x0f\x63ommit_position\x18\x01 \x02(\x03\x12\x18\n\x10prepare_position\x18\x02 \x02(\x03\x12\x11\n\tmax_count\x18\x03 \x02(\x05\x12\x19\n\x11max_search_window\x18\x04 \x01(\x05\x12\x18\n\x10resolve_link_tos\x18\x05 \x02(\x08\x12\x16\n\x0erequire_leader\x18\x06 \x02(\x08\x12\x32\n\x06\x66ilter\x18\x07 \x02(\x0b\x32\".EventStore.Client.Messages.Filter\"\xb3\x03\n\x1e\x46ilteredReadAllEventsCompleted\x12\x17\n\x0f\x63ommit_position\x18\x01 \x02(\x03\x12\x18\n\x10prepare_position\x18\x02 \x02(\x03\x12\x39\n\x06\x65vents\x18\x03 \x03(\x0b\x32).EventStore.Client.Messages.ResolvedEvent\x12\x1c\n\x14next_commit_position\x18\x04 \x02(\x03\x12\x1d\n\x15next_prepare_position\x18\x05 \x02(\x03\x12\x18\n\x10is_end_of_stream\x18\x06 \x02(\x08\x12i\n\x06result\x18\x07 \x01(\x0e\x32P.EventStore.Client.Messages.FilteredReadAllEventsCompleted.FilteredReadAllResult:\x07Success\x12\r\n\x05\x65rror\x18\x08 \x01(\t\"R\n\x15\x46ilteredReadAllResult\x12\x0b\n\x07Success\x10\x00\x12\x0f\n\x0bNotModified\x10\x01\x12\t\n\x05\x45rror\x10\x02\x12\x10\n\x0c\x41\x63\x63\x65ssDenied\x10\x03\"\xde\x03\n\x1c\x43reatePersistentSubscription\x12\x1f\n\x17subscription_group_name\x18\x01 \x02(\t\x12\x17\n\x0f\x65vent_stream_id\x18\x02 \x02(\t\x12\x18\n\x10resolve_link_tos\x18\x03 \x02(\x08\x12\x12\n\nstart_from\x18\x04 \x02(\x03\x12$\n\x1cmessage_timeout_milliseconds\x18\x05 \x02(\x05\x12\x19\n\x11record_statistics\x18\x06 \x02(\x08\x12\x18\n\x10live_buffer_size\x18\x07 \x02(\x05\x12\x17\n\x0fread_batch_size\x18\x08 \x02(\x05\x12\x13\n\x0b\x62uffer_size\x18\t \x02(\x05\x12\x17\n\x0fmax_retry_count\x18\n \x02(\x05\x12\x1a\n\x12prefer_round_robin\x18\x0b \x02(\x08\x12\x1d\n\x15\x63heckpoint_after_time\x18\x0c \x02(\x05\x12\x1c\n\x14\x63heckpoint_max_count\x18\r \x02(\x05\x12\x1c\n\x14\x63heckpoint_min_count\x18\x0e \x02(\x05\x12\x1c\n\x14subscriber_max_count\x18\x0f \x02(\x05\x12\x1f\n\x17named_consumer_strategy\x18\x10 \x01(\t\"X\n\x1c\x44\x65letePersistentSubscription\x12\x1f\n\x17subscription_group_name\x18\x01 \x02(\t\x12\x17\n\x0f\x65vent_stream_id\x18\x02 \x02(\t\"\xde\x03\n\x1cUpdatePersistentSubscription\x12\x1f\n\x17subscription_group_name\x18\x01 \x02(\t\x12\x17\n\x0f\x65vent_stream_id\x18\x02 \x02(\t\x12\x18\n\x10resolve_link_tos\x18\x03 \x02(\x08\x12\x12\n\nstart_from\x18\x04 \x02(\x03\x12$\n\x1cmessage_timeout_milliseconds\x18\x05 \x02(\x05\x12\x19\n\x11record_statistics\x18\x06 \x02(\x08\x12\x18\n\x10live_buffer_size\x18\x07 \x02(\x05\x12\x17\n\x0fread_batch_size\x18\x08 \x02(\x05\x12\x13\n\x0b\x62uffer_size\x18\t \x02(\x05\x12\x17\n\x0fmax_retry_count\x18\n \x02(\x05\x12\x1a\n\x12prefer_round_robin\x18\x0b \x02(\x08\x12\x1d\n\x15\x63heckpoint_after_time\x18\x0c \x02(\x05\x12\x1c\n\x14\x63heckpoint_max_count\x18\r \x02(\x05\x12\x1c\n\x14\x63heckpoint_min_count\x18\x0e \x02(\x05\x12\x1c\n\x14subscriber_max_count\x18\x0f \x02(\x05\x12\x1f\n\x17named_consumer_strategy\x18\x10 \x01(\t\"\x97\x02\n%UpdatePersistentSubscriptionCompleted\x12}\n\x06result\x18\x01 \x02(\x0e\x32\x64.EventStore.Client.Messages.UpdatePersistentSubscriptionCompleted.UpdatePersistentSubscriptionResult:\x07Success\x12\x0e\n\x06reason\x18\x02 \x01(\t\"_\n\"UpdatePersistentSubscriptionResult\x12\x0b\n\x07Success\x10\x00\x12\x10\n\x0c\x44oesNotExist\x10\x01\x12\x08\n\x04\x46\x61il\x10\x02\x12\x10\n\x0c\x41\x63\x63\x65ssDenied\x10\x03\"\x98\x02\n%CreatePersistentSubscriptionCompleted\x12}\n\x06result\x18\x01 \x02(\x0e\x32\x64.EventStore.Client.Messages.CreatePersistentSubscriptionCompleted.CreatePersistentSubscriptionResult:\x07Success\x12\x0e\n\x06reason\x18\x02 \x01(\t\"`\n\"CreatePersistentSubscriptionResult\x12\x0b\n\x07Success\x10\x00\x12\x11\n\rAlreadyExists\x10\x01\x12\x08\n\x04\x46\x61il\x10\x02\x12\x10\n\x0c\x41\x63\x63\x65ssDenied\x10\x03\"\x97\x02\n%DeletePersistentSubscriptionCompleted\x12}\n\x06result\x18\x01 \x02(\x0e\x32\x64.EventStore.Client.Messages.DeletePersistentSubscriptionCompleted.DeletePersistentSubscriptionResult:\x07Success\x12\x0e\n\x06reason\x18\x02 \x01(\t\"_\n\"DeletePersistentSubscriptionResult\x12\x0b\n\x07Success\x10\x00\x12\x10\n\x0c\x44oesNotExist\x10\x01\x12\x08\n\x04\x46\x61il\x10\x02\x12\x10\n\x0c\x41\x63\x63\x65ssDenied\x10\x03\"w\n\x1f\x43onnectToPersistentSubscription\x12\x17\n\x0fsubscription_id\x18\x01 \x02(\t\x12\x17\n\x0f\x65vent_stream_id\x18\x02 \x02(\t\x12\"\n\x1a\x61llowed_in_flight_messages\x18\x03 \x02(\x05\"W\n\x1fPersistentSubscriptionAckEvents\x12\x17\n\x0fsubscription_id\x18\x01 \x02(\t\x12\x1b\n\x13processed_event_ids\x18\x02 \x03(\x0c\"\x8b\x02\n\x1fPersistentSubscriptionNakEvents\x12\x17\n\x0fsubscription_id\x18\x01 \x02(\t\x12\x1b\n\x13processed_event_ids\x18\x02 \x03(\x0c\x12\x0f\n\x07message\x18\x03 \x01(\t\x12^\n\x06\x61\x63tion\x18\x04 \x02(\x0e\x32\x45.EventStore.Client.Messages.PersistentSubscriptionNakEvents.NakAction:\x07Unknown\"A\n\tNakAction\x12\x0b\n\x07Unknown\x10\x00\x12\x08\n\x04Park\x10\x01\x12\t\n\x05Retry\x10\x02\x12\x08\n\x04Skip\x10\x03\x12\x08\n\x04Stop\x10\x04\"v\n\"PersistentSubscriptionConfirmation\x12\x1c\n\x14last_commit_position\x18\x01 \x02(\x03\x12\x17\n\x0fsubscription_id\x18\x02 \x02(\t\x12\x19\n\x11last_event_number\x18\x03 \x01(\x03\"\x80\x01\n)PersistentSubscriptionStreamEventAppeared\x12?\n\x05\x65vent\x18\x01 \x02(\x0b\x32\x30.EventStore.Client.Messages.ResolvedIndexedEvent\x12\x12\n\nretryCount\x18\x02 \x01(\x05\"F\n\x11SubscribeToStream\x12\x17\n\x0f\x65vent_stream_id\x18\x01 \x02(\t\x12\x18\n\x10resolve_link_tos\x18\x02 \x02(\x08\"\x9f\x01\n\x19\x46ilteredSubscribeToStream\x12\x17\n\x0f\x65vent_stream_id\x18\x01 \x02(\t\x12\x18\n\x10resolve_link_tos\x18\x02 \x02(\x08\x12\x32\n\x06\x66ilter\x18\x03 \x02(\x0b\x32\".EventStore.Client.Messages.Filter\x12\x1b\n\x13\x63heckpoint_interval\x18\x04 \x02(\x05\"F\n\x11\x43heckpointReached\x12\x17\n\x0f\x63ommit_position\x18\x01 \x02(\x03\x12\x18\n\x10prepare_position\x18\x02 \x02(\x03\"S\n\x18SubscriptionConfirmation\x12\x1c\n\x14last_commit_position\x18\x01 \x02(\x03\x12\x19\n\x11last_event_number\x18\x02 \x01(\x03\"O\n\x13StreamEventAppeared\x12\x38\n\x05\x65vent\x18\x01 \x02(\x0b\x32).EventStore.Client.Messages.ResolvedEvent\"\x17\n\x15UnsubscribeFromStream\"\x8a\x02\n\x13SubscriptionDropped\x12\x64\n\x06reason\x18\x01 \x01(\x0e\x32\x46.EventStore.Client.Messages.SubscriptionDropped.SubscriptionDropReason:\x0cUnsubscribed\"\x8c\x01\n\x16SubscriptionDropReason\x12\x10\n\x0cUnsubscribed\x10\x00\x12\x10\n\x0c\x41\x63\x63\x65ssDenied\x10\x01\x12\x0c\n\x08NotFound\x10\x02\x12!\n\x1dPersistentSubscriptionDeleted\x10\x03\x12\x1d\n\x19SubscriberMaxCountReached\x10\x04\"\xf4\x02\n\nNotHandled\x12G\n\x06reason\x18\x01 \x02(\x0e\x32\x37.EventStore.Client.Messages.NotHandled.NotHandledReason\x12\x17\n\x0f\x61\x64\x64itional_info\x18\x02 \x01(\x0c\x1a\xb5\x01\n\nLeaderInfo\x12\x1c\n\x14\x65xternal_tcp_address\x18\x01 \x02(\t\x12\x19\n\x11\x65xternal_tcp_port\x18\x02 \x02(\x05\x12\x14\n\x0chttp_address\x18\x03 \x02(\t\x12\x11\n\thttp_port\x18\x04 \x02(\x05\x12#\n\x1b\x65xternal_secure_tcp_address\x18\x05 \x01(\t\x12 \n\x18\x65xternal_secure_tcp_port\x18\x06 \x01(\x05\"L\n\x10NotHandledReason\x12\x0c\n\x08NotReady\x10\x00\x12\x0b\n\x07TooBusy\x10\x01\x12\r\n\tNotLeader\x10\x02\x12\x0e\n\nIsReadOnly\x10\x03\"\x12\n\x10ScavengeDatabase\"\xc4\x01\n\x18ScavengeDatabaseResponse\x12S\n\x06result\x18\x01 \x02(\x0e\x32\x43.EventStore.Client.Messages.ScavengeDatabaseResponse.ScavengeResult\x12\x12\n\nscavengeId\x18\x02 \x01(\t\"?\n\x0eScavengeResult\x12\x0b\n\x07Started\x10\x00\x12\x0e\n\nInProgress\x10\x01\x12\x10\n\x0cUnauthorized\x10\x02\":\n\x0eIdentifyClient\x12\x0f\n\x07version\x18\x01 \x02(\x05\x12\x17\n\x0f\x63onnection_name\x18\x02 \x01(\t\"\x12\n\x10\x43lientIdentified*\xb0\x01\n\x0fOperationResult\x12\x0b\n\x07Success\x10\x00\x12\x12\n\x0ePrepareTimeout\x10\x01\x12\x11\n\rCommitTimeout\x10\x02\x12\x12\n\x0e\x46orwardTimeout\x10\x03\x12\x18\n\x14WrongExpectedVersion\x10\x04\x12\x11\n\rStreamDeleted\x10\x05\x12\x16\n\x12InvalidTransaction\x10\x06\x12\x10\n\x0c\x41\x63\x63\x65ssDenied\x10\x07')

_OPERATIONRESULT = DESCRIPTOR.enum_types_by_name['OperationResult']
OperationResult = enum_type_wrapper.EnumTypeWrapper(_OPERATIONRESULT)
Success = 0
PrepareTimeout = 1
CommitTimeout = 2
ForwardTimeout = 3
WrongExpectedVersion = 4
StreamDeleted = 5
InvalidTransaction = 6
AccessDenied = 7


_NEWEVENT = DESCRIPTOR.message_types_by_name['NewEvent']
_EVENTRECORD = DESCRIPTOR.message_types_by_name['EventRecord']
_RESOLVEDINDEXEDEVENT = DESCRIPTOR.message_types_by_name['ResolvedIndexedEvent']
_RESOLVEDEVENT = DESCRIPTOR.message_types_by_name['ResolvedEvent']
_WRITEEVENTS = DESCRIPTOR.message_types_by_name['WriteEvents']
_WRITEEVENTSCOMPLETED = DESCRIPTOR.message_types_by_name['WriteEventsCompleted']
_DELETESTREAM = DESCRIPTOR.message_types_by_name['DeleteStream']
_DELETESTREAMCOMPLETED = DESCRIPTOR.message_types_by_name['DeleteStreamCompleted']
_TRANSACTIONSTART = DESCRIPTOR.message_types_by_name['TransactionStart']
_TRANSACTIONSTARTCOMPLETED = DESCRIPTOR.message_types_by_name['TransactionStartCompleted']
_TRANSACTIONWRITE = DESCRIPTOR.message_types_by_name['TransactionWrite']
_TRANSACTIONWRITECOMPLETED = DESCRIPTOR.message_types_by_name['TransactionWriteCompleted']
_TRANSACTIONCOMMIT = DESCRIPTOR.message_types_by_name['TransactionCommit']
_TRANSACTIONCOMMITCOMPLETED = DESCRIPTOR.message_types_by_name['TransactionCommitCompleted']
_READEVENT = DESCRIPTOR.message_types_by_name['ReadEvent']
_READEVENTCOMPLETED = DESCRIPTOR.message_types_by_name['ReadEventCompleted']
_READSTREAMEVENTS = DESCRIPTOR.message_types_by_name['ReadStreamEvents']
_READSTREAMEVENTSCOMPLETED = DESCRIPTOR.message_types_by_name['ReadStreamEventsCompleted']
_READALLEVENTS = DESCRIPTOR.message_types_by_name['ReadAllEvents']
_READALLEVENTSCOMPLETED = DESCRIPTOR.message_types_by_name['ReadAllEventsCompleted']
_FILTER = DESCRIPTOR.message_types_by_name['Filter']
_FILTEREDREADALLEVENTS = DESCRIPTOR.message_types_by_name['FilteredReadAllEvents']
_FILTEREDREADALLEVENTSCOMPLETED = DESCRIPTOR.message_types_by_name['FilteredReadAllEventsCompleted']
_CREATEPERSISTENTSUBSCRIPTION = DESCRIPTOR.message_types_by_name['CreatePersistentSubscription']
_DELETEPERSISTENTSUBSCRIPTION = DESCRIPTOR.message_types_by_name['DeletePersistentSubscription']
_UPDATEPERSISTENTSUBSCRIPTION = DESCRIPTOR.message_types_by_name['UpdatePersistentSubscription']
_UPDATEPERSISTENTSUBSCRIPTIONCOMPLETED = DESCRIPTOR.message_types_by_name['UpdatePersistentSubscriptionCompleted']
_CREATEPERSISTENTSUBSCRIPTIONCOMPLETED = DESCRIPTOR.message_types_by_name['CreatePersistentSubscriptionCompleted']
_DELETEPERSISTENTSUBSCRIPTIONCOMPLETED = DESCRIPTOR.message_types_by_name['DeletePersistentSubscriptionCompleted']
_CONNECTTOPERSISTENTSUBSCRIPTION = DESCRIPTOR.message_types_by_name['ConnectToPersistentSubscription']
_PERSISTENTSUBSCRIPTIONACKEVENTS = DESCRIPTOR.message_types_by_name['PersistentSubscriptionAckEvents']
_PERSISTENTSUBSCRIPTIONNAKEVENTS = DESCRIPTOR.message_types_by_name['PersistentSubscriptionNakEvents']
_PERSISTENTSUBSCRIPTIONCONFIRMATION = DESCRIPTOR.message_types_by_name['PersistentSubscriptionConfirmation']
_PERSISTENTSUBSCRIPTIONSTREAMEVENTAPPEARED = DESCRIPTOR.message_types_by_name['PersistentSubscriptionStreamEventAppeared']
_SUBSCRIBETOSTREAM = DESCRIPTOR.message_types_by_name['SubscribeToStream']
_FILTEREDSUBSCRIBETOSTREAM = DESCRIPTOR.message_types_by_name['FilteredSubscribeToStream']
_CHECKPOINTREACHED = DESCRIPTOR.message_types_by_name['CheckpointReached']
_SUBSCRIPTIONCONFIRMATION = DESCRIPTOR.message_types_by_name['SubscriptionConfirmation']
_STREAMEVENTAPPEARED = DESCRIPTOR.message_types_by_name['StreamEventAppeared']
_UNSUBSCRIBEFROMSTREAM = DESCRIPTOR.message_types_by_name['UnsubscribeFromStream']
_SUBSCRIPTIONDROPPED = DESCRIPTOR.message_types_by_name['SubscriptionDropped']
_NOTHANDLED = DESCRIPTOR.message_types_by_name['NotHandled']
_NOTHANDLED_LEADERINFO = _NOTHANDLED.nested_types_by_name['LeaderInfo']
_SCAVENGEDATABASE = DESCRIPTOR.message_types_by_name['ScavengeDatabase']
_SCAVENGEDATABASERESPONSE = DESCRIPTOR.message_types_by_name['ScavengeDatabaseResponse']
_IDENTIFYCLIENT = DESCRIPTOR.message_types_by_name['IdentifyClient']
_CLIENTIDENTIFIED = DESCRIPTOR.message_types_by_name['ClientIdentified']
_READEVENTCOMPLETED_READEVENTRESULT = _READEVENTCOMPLETED.enum_types_by_name['ReadEventResult']
_READSTREAMEVENTSCOMPLETED_READSTREAMRESULT = _READSTREAMEVENTSCOMPLETED.enum_types_by_name['ReadStreamResult']
_READALLEVENTSCOMPLETED_READALLRESULT = _READALLEVENTSCOMPLETED.enum_types_by_name['ReadAllResult']
_FILTER_FILTERCONTEXT = _FILTER.enum_types_by_name['FilterContext']
_FILTER_FILTERTYPE = _FILTER.enum_types_by_name['FilterType']
_FILTEREDREADALLEVENTSCOMPLETED_FILTEREDREADALLRESULT = _FILTEREDREADALLEVENTSCOMPLETED.enum_types_by_name['FilteredReadAllResult']
_UPDATEPERSISTENTSUBSCRIPTIONCOMPLETED_UPDATEPERSISTENTSUBSCRIPTIONRESULT = _UPDATEPERSISTENTSUBSCRIPTIONCOMPLETED.enum_types_by_name['UpdatePersistentSubscriptionResult']
_CREATEPERSISTENTSUBSCRIPTIONCOMPLETED_CREATEPERSISTENTSUBSCRIPTIONRESULT = _CREATEPERSISTENTSUBSCRIPTIONCOMPLETED.enum_types_by_name['CreatePersistentSubscriptionResult']
_DELETEPERSISTENTSUBSCRIPTIONCOMPLETED_DELETEPERSISTENTSUBSCRIPTIONRESULT = _DELETEPERSISTENTSUBSCRIPTIONCOMPLETED.enum_types_by_name['DeletePersistentSubscriptionResult']
_PERSISTENTSUBSCRIPTIONNAKEVENTS_NAKACTION = _PERSISTENTSUBSCRIPTIONNAKEVENTS.enum_types_by_name['NakAction']
_SUBSCRIPTIONDROPPED_SUBSCRIPTIONDROPREASON = _SUBSCRIPTIONDROPPED.enum_types_by_name['SubscriptionDropReason']
_NOTHANDLED_NOTHANDLEDREASON = _NOTHANDLED.enum_types_by_name['NotHandledReason']
_SCAVENGEDATABASERESPONSE_SCAVENGERESULT = _SCAVENGEDATABASERESPONSE.enum_types_by_name['ScavengeResult']
NewEvent = _reflection.GeneratedProtocolMessageType('NewEvent', (_message.Message,), {
  'DESCRIPTOR' : _NEWEVENT,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.NewEvent)
  })
_sym_db.RegisterMessage(NewEvent)

EventRecord = _reflection.GeneratedProtocolMessageType('EventRecord', (_message.Message,), {
  'DESCRIPTOR' : _EVENTRECORD,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.EventRecord)
  })
_sym_db.RegisterMessage(EventRecord)

ResolvedIndexedEvent = _reflection.GeneratedProtocolMessageType('ResolvedIndexedEvent', (_message.Message,), {
  'DESCRIPTOR' : _RESOLVEDINDEXEDEVENT,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ResolvedIndexedEvent)
  })
_sym_db.RegisterMessage(ResolvedIndexedEvent)

ResolvedEvent = _reflection.GeneratedProtocolMessageType('ResolvedEvent', (_message.Message,), {
  'DESCRIPTOR' : _RESOLVEDEVENT,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ResolvedEvent)
  })
_sym_db.RegisterMessage(ResolvedEvent)

WriteEvents = _reflection.GeneratedProtocolMessageType('WriteEvents', (_message.Message,), {
  'DESCRIPTOR' : _WRITEEVENTS,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.WriteEvents)
  })
_sym_db.RegisterMessage(WriteEvents)

WriteEventsCompleted = _reflection.GeneratedProtocolMessageType('WriteEventsCompleted', (_message.Message,), {
  'DESCRIPTOR' : _WRITEEVENTSCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.WriteEventsCompleted)
  })
_sym_db.RegisterMessage(WriteEventsCompleted)

DeleteStream = _reflection.GeneratedProtocolMessageType('DeleteStream', (_message.Message,), {
  'DESCRIPTOR' : _DELETESTREAM,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.DeleteStream)
  })
_sym_db.RegisterMessage(DeleteStream)

DeleteStreamCompleted = _reflection.GeneratedProtocolMessageType('DeleteStreamCompleted', (_message.Message,), {
  'DESCRIPTOR' : _DELETESTREAMCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.DeleteStreamCompleted)
  })
_sym_db.RegisterMessage(DeleteStreamCompleted)

TransactionStart = _reflection.GeneratedProtocolMessageType('TransactionStart', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONSTART,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.TransactionStart)
  })
_sym_db.RegisterMessage(TransactionStart)

TransactionStartCompleted = _reflection.GeneratedProtocolMessageType('TransactionStartCompleted', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONSTARTCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.TransactionStartCompleted)
  })
_sym_db.RegisterMessage(TransactionStartCompleted)

TransactionWrite = _reflection.GeneratedProtocolMessageType('TransactionWrite', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONWRITE,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.TransactionWrite)
  })
_sym_db.RegisterMessage(TransactionWrite)

TransactionWriteCompleted = _reflection.GeneratedProtocolMessageType('TransactionWriteCompleted', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONWRITECOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.TransactionWriteCompleted)
  })
_sym_db.RegisterMessage(TransactionWriteCompleted)

TransactionCommit = _reflection.GeneratedProtocolMessageType('TransactionCommit', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONCOMMIT,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.TransactionCommit)
  })
_sym_db.RegisterMessage(TransactionCommit)

TransactionCommitCompleted = _reflection.GeneratedProtocolMessageType('TransactionCommitCompleted', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONCOMMITCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.TransactionCommitCompleted)
  })
_sym_db.RegisterMessage(TransactionCommitCompleted)

ReadEvent = _reflection.GeneratedProtocolMessageType('ReadEvent', (_message.Message,), {
  'DESCRIPTOR' : _READEVENT,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ReadEvent)
  })
_sym_db.RegisterMessage(ReadEvent)

ReadEventCompleted = _reflection.GeneratedProtocolMessageType('ReadEventCompleted', (_message.Message,), {
  'DESCRIPTOR' : _READEVENTCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ReadEventCompleted)
  })
_sym_db.RegisterMessage(ReadEventCompleted)

ReadStreamEvents = _reflection.GeneratedProtocolMessageType('ReadStreamEvents', (_message.Message,), {
  'DESCRIPTOR' : _READSTREAMEVENTS,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ReadStreamEvents)
  })
_sym_db.RegisterMessage(ReadStreamEvents)

ReadStreamEventsCompleted = _reflection.GeneratedProtocolMessageType('ReadStreamEventsCompleted', (_message.Message,), {
  'DESCRIPTOR' : _READSTREAMEVENTSCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ReadStreamEventsCompleted)
  })
_sym_db.RegisterMessage(ReadStreamEventsCompleted)

ReadAllEvents = _reflection.GeneratedProtocolMessageType('ReadAllEvents', (_message.Message,), {
  'DESCRIPTOR' : _READALLEVENTS,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ReadAllEvents)
  })
_sym_db.RegisterMessage(ReadAllEvents)

ReadAllEventsCompleted = _reflection.GeneratedProtocolMessageType('ReadAllEventsCompleted', (_message.Message,), {
  'DESCRIPTOR' : _READALLEVENTSCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ReadAllEventsCompleted)
  })
_sym_db.RegisterMessage(ReadAllEventsCompleted)

Filter = _reflection.GeneratedProtocolMessageType('Filter', (_message.Message,), {
  'DESCRIPTOR' : _FILTER,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.Filter)
  })
_sym_db.RegisterMessage(Filter)

FilteredReadAllEvents = _reflection.GeneratedProtocolMessageType('FilteredReadAllEvents', (_message.Message,), {
  'DESCRIPTOR' : _FILTEREDREADALLEVENTS,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.FilteredReadAllEvents)
  })
_sym_db.RegisterMessage(FilteredReadAllEvents)

FilteredReadAllEventsCompleted = _reflection.GeneratedProtocolMessageType('FilteredReadAllEventsCompleted', (_message.Message,), {
  'DESCRIPTOR' : _FILTEREDREADALLEVENTSCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.FilteredReadAllEventsCompleted)
  })
_sym_db.RegisterMessage(FilteredReadAllEventsCompleted)

CreatePersistentSubscription = _reflection.GeneratedProtocolMessageType('CreatePersistentSubscription', (_message.Message,), {
  'DESCRIPTOR' : _CREATEPERSISTENTSUBSCRIPTION,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.CreatePersistentSubscription)
  })
_sym_db.RegisterMessage(CreatePersistentSubscription)

DeletePersistentSubscription = _reflection.GeneratedProtocolMessageType('DeletePersistentSubscription', (_message.Message,), {
  'DESCRIPTOR' : _DELETEPERSISTENTSUBSCRIPTION,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.DeletePersistentSubscription)
  })
_sym_db.RegisterMessage(DeletePersistentSubscription)

UpdatePersistentSubscription = _reflection.GeneratedProtocolMessageType('UpdatePersistentSubscription', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEPERSISTENTSUBSCRIPTION,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.UpdatePersistentSubscription)
  })
_sym_db.RegisterMessage(UpdatePersistentSubscription)

UpdatePersistentSubscriptionCompleted = _reflection.GeneratedProtocolMessageType('UpdatePersistentSubscriptionCompleted', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEPERSISTENTSUBSCRIPTIONCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.UpdatePersistentSubscriptionCompleted)
  })
_sym_db.RegisterMessage(UpdatePersistentSubscriptionCompleted)

CreatePersistentSubscriptionCompleted = _reflection.GeneratedProtocolMessageType('CreatePersistentSubscriptionCompleted', (_message.Message,), {
  'DESCRIPTOR' : _CREATEPERSISTENTSUBSCRIPTIONCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.CreatePersistentSubscriptionCompleted)
  })
_sym_db.RegisterMessage(CreatePersistentSubscriptionCompleted)

DeletePersistentSubscriptionCompleted = _reflection.GeneratedProtocolMessageType('DeletePersistentSubscriptionCompleted', (_message.Message,), {
  'DESCRIPTOR' : _DELETEPERSISTENTSUBSCRIPTIONCOMPLETED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.DeletePersistentSubscriptionCompleted)
  })
_sym_db.RegisterMessage(DeletePersistentSubscriptionCompleted)

ConnectToPersistentSubscription = _reflection.GeneratedProtocolMessageType('ConnectToPersistentSubscription', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTTOPERSISTENTSUBSCRIPTION,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ConnectToPersistentSubscription)
  })
_sym_db.RegisterMessage(ConnectToPersistentSubscription)

PersistentSubscriptionAckEvents = _reflection.GeneratedProtocolMessageType('PersistentSubscriptionAckEvents', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTSUBSCRIPTIONACKEVENTS,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.PersistentSubscriptionAckEvents)
  })
_sym_db.RegisterMessage(PersistentSubscriptionAckEvents)

PersistentSubscriptionNakEvents = _reflection.GeneratedProtocolMessageType('PersistentSubscriptionNakEvents', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTSUBSCRIPTIONNAKEVENTS,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.PersistentSubscriptionNakEvents)
  })
_sym_db.RegisterMessage(PersistentSubscriptionNakEvents)

PersistentSubscriptionConfirmation = _reflection.GeneratedProtocolMessageType('PersistentSubscriptionConfirmation', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTSUBSCRIPTIONCONFIRMATION,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.PersistentSubscriptionConfirmation)
  })
_sym_db.RegisterMessage(PersistentSubscriptionConfirmation)

PersistentSubscriptionStreamEventAppeared = _reflection.GeneratedProtocolMessageType('PersistentSubscriptionStreamEventAppeared', (_message.Message,), {
  'DESCRIPTOR' : _PERSISTENTSUBSCRIPTIONSTREAMEVENTAPPEARED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.PersistentSubscriptionStreamEventAppeared)
  })
_sym_db.RegisterMessage(PersistentSubscriptionStreamEventAppeared)

SubscribeToStream = _reflection.GeneratedProtocolMessageType('SubscribeToStream', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIBETOSTREAM,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.SubscribeToStream)
  })
_sym_db.RegisterMessage(SubscribeToStream)

FilteredSubscribeToStream = _reflection.GeneratedProtocolMessageType('FilteredSubscribeToStream', (_message.Message,), {
  'DESCRIPTOR' : _FILTEREDSUBSCRIBETOSTREAM,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.FilteredSubscribeToStream)
  })
_sym_db.RegisterMessage(FilteredSubscribeToStream)

CheckpointReached = _reflection.GeneratedProtocolMessageType('CheckpointReached', (_message.Message,), {
  'DESCRIPTOR' : _CHECKPOINTREACHED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.CheckpointReached)
  })
_sym_db.RegisterMessage(CheckpointReached)

SubscriptionConfirmation = _reflection.GeneratedProtocolMessageType('SubscriptionConfirmation', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIPTIONCONFIRMATION,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.SubscriptionConfirmation)
  })
_sym_db.RegisterMessage(SubscriptionConfirmation)

StreamEventAppeared = _reflection.GeneratedProtocolMessageType('StreamEventAppeared', (_message.Message,), {
  'DESCRIPTOR' : _STREAMEVENTAPPEARED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.StreamEventAppeared)
  })
_sym_db.RegisterMessage(StreamEventAppeared)

UnsubscribeFromStream = _reflection.GeneratedProtocolMessageType('UnsubscribeFromStream', (_message.Message,), {
  'DESCRIPTOR' : _UNSUBSCRIBEFROMSTREAM,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.UnsubscribeFromStream)
  })
_sym_db.RegisterMessage(UnsubscribeFromStream)

SubscriptionDropped = _reflection.GeneratedProtocolMessageType('SubscriptionDropped', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIPTIONDROPPED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.SubscriptionDropped)
  })
_sym_db.RegisterMessage(SubscriptionDropped)

NotHandled = _reflection.GeneratedProtocolMessageType('NotHandled', (_message.Message,), {

  'LeaderInfo' : _reflection.GeneratedProtocolMessageType('LeaderInfo', (_message.Message,), {
    'DESCRIPTOR' : _NOTHANDLED_LEADERINFO,
    '__module__' : 'messages_pb2'
    # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.NotHandled.LeaderInfo)
    })
  ,
  'DESCRIPTOR' : _NOTHANDLED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.NotHandled)
  })
_sym_db.RegisterMessage(NotHandled)
_sym_db.RegisterMessage(NotHandled.LeaderInfo)

ScavengeDatabase = _reflection.GeneratedProtocolMessageType('ScavengeDatabase', (_message.Message,), {
  'DESCRIPTOR' : _SCAVENGEDATABASE,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ScavengeDatabase)
  })
_sym_db.RegisterMessage(ScavengeDatabase)

ScavengeDatabaseResponse = _reflection.GeneratedProtocolMessageType('ScavengeDatabaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _SCAVENGEDATABASERESPONSE,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ScavengeDatabaseResponse)
  })
_sym_db.RegisterMessage(ScavengeDatabaseResponse)

IdentifyClient = _reflection.GeneratedProtocolMessageType('IdentifyClient', (_message.Message,), {
  'DESCRIPTOR' : _IDENTIFYCLIENT,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.IdentifyClient)
  })
_sym_db.RegisterMessage(IdentifyClient)

ClientIdentified = _reflection.GeneratedProtocolMessageType('ClientIdentified', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTIDENTIFIED,
  '__module__' : 'messages_pb2'
  # @@protoc_insertion_point(class_scope:EventStore.Client.Messages.ClientIdentified)
  })
_sym_db.RegisterMessage(ClientIdentified)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _OPERATIONRESULT._serialized_start=8621
  _OPERATIONRESULT._serialized_end=8797
  _NEWEVENT._serialized_start=47
  _NEWEVENT._serialized_end=185
  _EVENTRECORD._serialized_start=188
  _EVENTRECORD._serialized_end=416
  _RESOLVEDINDEXEDEVENT._serialized_start=419
  _RESOLVEDINDEXEDEVENT._serialized_end=552
  _RESOLVEDEVENT._serialized_start=555
  _RESOLVEDEVENT._serialized_end=732
  _WRITEEVENTS._serialized_start=735
  _WRITEEVENTS._serialized_end=877
  _WRITEEVENTSCOMPLETED._serialized_start=880
  _WRITEEVENTSCOMPLETED._serialized_end=1111
  _DELETESTREAM._serialized_start=1113
  _DELETESTREAM._serialized_end=1223
  _DELETESTREAMCOMPLETED._serialized_start=1226
  _DELETESTREAMCOMPLETED._serialized_end=1378
  _TRANSACTIONSTART._serialized_start=1380
  _TRANSACTIONSTART._serialized_end=1473
  _TRANSACTIONSTARTCOMPLETED._serialized_start=1476
  _TRANSACTIONSTARTCOMPLETED._serialized_end=1605
  _TRANSACTIONWRITE._serialized_start=1607
  _TRANSACTIONWRITE._serialized_end=1727
  _TRANSACTIONWRITECOMPLETED._serialized_start=1730
  _TRANSACTIONWRITECOMPLETED._serialized_end=1859
  _TRANSACTIONCOMMIT._serialized_start=1861
  _TRANSACTIONCOMMIT._serialized_end=1928
  _TRANSACTIONCOMMITCOMPLETED._serialized_start=1931
  _TRANSACTIONCOMMITCOMPLETED._serialized_end=2167
  _READEVENT._serialized_start=2169
  _READEVENT._serialized_end=2277
  _READEVENTCOMPLETED._serialized_start=2280
  _READEVENTCOMPLETED._serialized_end=2568
  _READEVENTCOMPLETED_READEVENTRESULT._serialized_start=2462
  _READEVENTCOMPLETED_READEVENTRESULT._serialized_end=2568
  _READSTREAMEVENTS._serialized_start=2571
  _READSTREAMEVENTS._serialized_end=2710
  _READSTREAMEVENTSCOMPLETED._serialized_start=2713
  _READSTREAMEVENTSCOMPLETED._serialized_end=3131
  _READSTREAMEVENTSCOMPLETED_READSTREAMRESULT._serialized_start=3021
  _READSTREAMEVENTSCOMPLETED_READSTREAMRESULT._serialized_end=3131
  _READALLEVENTS._serialized_start=3134
  _READALLEVENTS._serialized_end=3269
  _READALLEVENTSCOMPLETED._serialized_start=3272
  _READALLEVENTSCOMPLETED._serialized_end=3649
  _READALLEVENTSCOMPLETED_READALLRESULT._serialized_start=3575
  _READALLEVENTSCOMPLETED_READALLRESULT._serialized_end=3649
  _FILTER._serialized_start=3652
  _FILTER._serialized_end=3885
  _FILTER_FILTERCONTEXT._serialized_start=3804
  _FILTER_FILTERCONTEXT._serialized_end=3848
  _FILTER_FILTERTYPE._serialized_start=3850
  _FILTER_FILTERTYPE._serialized_end=3885
  _FILTEREDREADALLEVENTS._serialized_start=3888
  _FILTEREDREADALLEVENTS._serialized_end=4110
  _FILTEREDREADALLEVENTSCOMPLETED._serialized_start=4113
  _FILTEREDREADALLEVENTSCOMPLETED._serialized_end=4548
  _FILTEREDREADALLEVENTSCOMPLETED_FILTEREDREADALLRESULT._serialized_start=4466
  _FILTEREDREADALLEVENTSCOMPLETED_FILTEREDREADALLRESULT._serialized_end=4548
  _CREATEPERSISTENTSUBSCRIPTION._serialized_start=4551
  _CREATEPERSISTENTSUBSCRIPTION._serialized_end=5029
  _DELETEPERSISTENTSUBSCRIPTION._serialized_start=5031
  _DELETEPERSISTENTSUBSCRIPTION._serialized_end=5119
  _UPDATEPERSISTENTSUBSCRIPTION._serialized_start=5122
  _UPDATEPERSISTENTSUBSCRIPTION._serialized_end=5600
  _UPDATEPERSISTENTSUBSCRIPTIONCOMPLETED._serialized_start=5603
  _UPDATEPERSISTENTSUBSCRIPTIONCOMPLETED._serialized_end=5882
  _UPDATEPERSISTENTSUBSCRIPTIONCOMPLETED_UPDATEPERSISTENTSUBSCRIPTIONRESULT._serialized_start=5787
  _UPDATEPERSISTENTSUBSCRIPTIONCOMPLETED_UPDATEPERSISTENTSUBSCRIPTIONRESULT._serialized_end=5882
  _CREATEPERSISTENTSUBSCRIPTIONCOMPLETED._serialized_start=5885
  _CREATEPERSISTENTSUBSCRIPTIONCOMPLETED._serialized_end=6165
  _CREATEPERSISTENTSUBSCRIPTIONCOMPLETED_CREATEPERSISTENTSUBSCRIPTIONRESULT._serialized_start=6069
  _CREATEPERSISTENTSUBSCRIPTIONCOMPLETED_CREATEPERSISTENTSUBSCRIPTIONRESULT._serialized_end=6165
  _DELETEPERSISTENTSUBSCRIPTIONCOMPLETED._serialized_start=6168
  _DELETEPERSISTENTSUBSCRIPTIONCOMPLETED._serialized_end=6447
  _DELETEPERSISTENTSUBSCRIPTIONCOMPLETED_DELETEPERSISTENTSUBSCRIPTIONRESULT._serialized_start=6352
  _DELETEPERSISTENTSUBSCRIPTIONCOMPLETED_DELETEPERSISTENTSUBSCRIPTIONRESULT._serialized_end=6447
  _CONNECTTOPERSISTENTSUBSCRIPTION._serialized_start=6449
  _CONNECTTOPERSISTENTSUBSCRIPTION._serialized_end=6568
  _PERSISTENTSUBSCRIPTIONACKEVENTS._serialized_start=6570
  _PERSISTENTSUBSCRIPTIONACKEVENTS._serialized_end=6657
  _PERSISTENTSUBSCRIPTIONNAKEVENTS._serialized_start=6660
  _PERSISTENTSUBSCRIPTIONNAKEVENTS._serialized_end=6927
  _PERSISTENTSUBSCRIPTIONNAKEVENTS_NAKACTION._serialized_start=6862
  _PERSISTENTSUBSCRIPTIONNAKEVENTS_NAKACTION._serialized_end=6927
  _PERSISTENTSUBSCRIPTIONCONFIRMATION._serialized_start=6929
  _PERSISTENTSUBSCRIPTIONCONFIRMATION._serialized_end=7047
  _PERSISTENTSUBSCRIPTIONSTREAMEVENTAPPEARED._serialized_start=7050
  _PERSISTENTSUBSCRIPTIONSTREAMEVENTAPPEARED._serialized_end=7178
  _SUBSCRIBETOSTREAM._serialized_start=7180
  _SUBSCRIBETOSTREAM._serialized_end=7250
  _FILTEREDSUBSCRIBETOSTREAM._serialized_start=7253
  _FILTEREDSUBSCRIBETOSTREAM._serialized_end=7412
  _CHECKPOINTREACHED._serialized_start=7414
  _CHECKPOINTREACHED._serialized_end=7484
  _SUBSCRIPTIONCONFIRMATION._serialized_start=7486
  _SUBSCRIPTIONCONFIRMATION._serialized_end=7569
  _STREAMEVENTAPPEARED._serialized_start=7571
  _STREAMEVENTAPPEARED._serialized_end=7650
  _UNSUBSCRIBEFROMSTREAM._serialized_start=7652
  _UNSUBSCRIBEFROMSTREAM._serialized_end=7675
  _SUBSCRIPTIONDROPPED._serialized_start=7678
  _SUBSCRIPTIONDROPPED._serialized_end=7944
  _SUBSCRIPTIONDROPPED_SUBSCRIPTIONDROPREASON._serialized_start=7804
  _SUBSCRIPTIONDROPPED_SUBSCRIPTIONDROPREASON._serialized_end=7944
  _NOTHANDLED._serialized_start=7947
  _NOTHANDLED._serialized_end=8319
  _NOTHANDLED_LEADERINFO._serialized_start=8060
  _NOTHANDLED_LEADERINFO._serialized_end=8241
  _NOTHANDLED_NOTHANDLEDREASON._serialized_start=8243
  _NOTHANDLED_NOTHANDLEDREASON._serialized_end=8319
  _SCAVENGEDATABASE._serialized_start=8321
  _SCAVENGEDATABASE._serialized_end=8339
  _SCAVENGEDATABASERESPONSE._serialized_start=8342
  _SCAVENGEDATABASERESPONSE._serialized_end=8538
  _SCAVENGEDATABASERESPONSE_SCAVENGERESULT._serialized_start=8475
  _SCAVENGEDATABASERESPONSE_SCAVENGERESULT._serialized_end=8538
  _IDENTIFYCLIENT._serialized_start=8540
  _IDENTIFYCLIENT._serialized_end=8598
  _CLIENTIDENTIFIED._serialized_start=8600
  _CLIENTIDENTIFIED._serialized_end=8618
# @@protoc_insertion_point(module_scope)
